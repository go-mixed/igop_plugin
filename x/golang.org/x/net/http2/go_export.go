// export by github.com/goplus/igop/cmd/qexp

package http2

import (
	q "golang.org/x/net/http2"

	"go/constant"
	"reflect"

	"github.com/goplus/igop"
)

func init() {
	igop.RegisterPackage(&igop.Package{
		Name: "http2",
		Path: "golang.org/x/net/http2",
		Deps: map[string]string{
			"bufio":                          "bufio",
			"bytes":                          "bytes",
			"compress/gzip":                  "gzip",
			"context":                        "context",
			"crypto/rand":                    "rand",
			"crypto/tls":                     "tls",
			"encoding/binary":                "binary",
			"errors":                         "errors",
			"fmt":                            "fmt",
			"golang.org/x/net/http/httpguts": "httpguts",
			"golang.org/x/net/http2/hpack":   "hpack",
			"golang.org/x/net/idna":          "idna",
			"io":                             "io",
			"io/fs":                          "fs",
			"log":                            "log",
			"math":                           "math",
			"math/rand":                      "rand",
			"net":                            "net",
			"net/http":                       "http",
			"net/http/httptrace":             "httptrace",
			"net/textproto":                  "textproto",
			"net/url":                        "url",
			"os":                             "os",
			"reflect":                        "reflect",
			"runtime":                        "runtime",
			"sort":                           "sort",
			"strconv":                        "strconv",
			"strings":                        "strings",
			"sync":                           "sync",
			"sync/atomic":                    "atomic",
			"time":                           "time",
		},
		Interfaces: map[string]reflect.Type{
			"ClientConnPool": reflect.TypeOf((*q.ClientConnPool)(nil)).Elem(),
			"Frame":          reflect.TypeOf((*q.Frame)(nil)).Elem(),
			"WriteScheduler": reflect.TypeOf((*q.WriteScheduler)(nil)).Elem(),
		},
		NamedTypes: map[string]reflect.Type{
			"ClientConn":                   reflect.TypeOf((*q.ClientConn)(nil)).Elem(),
			"ClientConnState":              reflect.TypeOf((*q.ClientConnState)(nil)).Elem(),
			"ConnectionError":              reflect.TypeOf((*q.ConnectionError)(nil)).Elem(),
			"ContinuationFrame":            reflect.TypeOf((*q.ContinuationFrame)(nil)).Elem(),
			"DataFrame":                    reflect.TypeOf((*q.DataFrame)(nil)).Elem(),
			"ErrCode":                      reflect.TypeOf((*q.ErrCode)(nil)).Elem(),
			"Flags":                        reflect.TypeOf((*q.Flags)(nil)).Elem(),
			"FrameHeader":                  reflect.TypeOf((*q.FrameHeader)(nil)).Elem(),
			"FrameType":                    reflect.TypeOf((*q.FrameType)(nil)).Elem(),
			"FrameWriteRequest":            reflect.TypeOf((*q.FrameWriteRequest)(nil)).Elem(),
			"Framer":                       reflect.TypeOf((*q.Framer)(nil)).Elem(),
			"GoAwayError":                  reflect.TypeOf((*q.GoAwayError)(nil)).Elem(),
			"GoAwayFrame":                  reflect.TypeOf((*q.GoAwayFrame)(nil)).Elem(),
			"HeadersFrame":                 reflect.TypeOf((*q.HeadersFrame)(nil)).Elem(),
			"HeadersFrameParam":            reflect.TypeOf((*q.HeadersFrameParam)(nil)).Elem(),
			"MetaHeadersFrame":             reflect.TypeOf((*q.MetaHeadersFrame)(nil)).Elem(),
			"OpenStreamOptions":            reflect.TypeOf((*q.OpenStreamOptions)(nil)).Elem(),
			"PingFrame":                    reflect.TypeOf((*q.PingFrame)(nil)).Elem(),
			"PriorityFrame":                reflect.TypeOf((*q.PriorityFrame)(nil)).Elem(),
			"PriorityParam":                reflect.TypeOf((*q.PriorityParam)(nil)).Elem(),
			"PriorityWriteSchedulerConfig": reflect.TypeOf((*q.PriorityWriteSchedulerConfig)(nil)).Elem(),
			"PushPromiseFrame":             reflect.TypeOf((*q.PushPromiseFrame)(nil)).Elem(),
			"PushPromiseParam":             reflect.TypeOf((*q.PushPromiseParam)(nil)).Elem(),
			"RSTStreamFrame":               reflect.TypeOf((*q.RSTStreamFrame)(nil)).Elem(),
			"RoundTripOpt":                 reflect.TypeOf((*q.RoundTripOpt)(nil)).Elem(),
			"ServeConnOpts":                reflect.TypeOf((*q.ServeConnOpts)(nil)).Elem(),
			"Server":                       reflect.TypeOf((*q.Server)(nil)).Elem(),
			"Setting":                      reflect.TypeOf((*q.Setting)(nil)).Elem(),
			"SettingID":                    reflect.TypeOf((*q.SettingID)(nil)).Elem(),
			"SettingsFrame":                reflect.TypeOf((*q.SettingsFrame)(nil)).Elem(),
			"StreamError":                  reflect.TypeOf((*q.StreamError)(nil)).Elem(),
			"Transport":                    reflect.TypeOf((*q.Transport)(nil)).Elem(),
			"UnknownFrame":                 reflect.TypeOf((*q.UnknownFrame)(nil)).Elem(),
			"WindowUpdateFrame":            reflect.TypeOf((*q.WindowUpdateFrame)(nil)).Elem(),
		},
		AliasTypes: map[string]reflect.Type{},
		Vars: map[string]reflect.Value{
			"DebugGoroutines":     reflect.ValueOf(&q.DebugGoroutines),
			"ErrFrameTooLarge":    reflect.ValueOf(&q.ErrFrameTooLarge),
			"ErrNoCachedConn":     reflect.ValueOf(&q.ErrNoCachedConn),
			"ErrPushLimitReached": reflect.ValueOf(&q.ErrPushLimitReached),
			"ErrRecursivePush":    reflect.ValueOf(&q.ErrRecursivePush),
			"VerboseLogs":         reflect.ValueOf(&q.VerboseLogs),
		},
		Funcs: map[string]reflect.Value{
			"ConfigureServer":           reflect.ValueOf(q.ConfigureServer),
			"ConfigureTransport":        reflect.ValueOf(q.ConfigureTransport),
			"ConfigureTransports":       reflect.ValueOf(q.ConfigureTransports),
			"NewFramer":                 reflect.ValueOf(q.NewFramer),
			"NewPriorityWriteScheduler": reflect.ValueOf(q.NewPriorityWriteScheduler),
			"NewRandomWriteScheduler":   reflect.ValueOf(q.NewRandomWriteScheduler),
			"ReadFrameHeader":           reflect.ValueOf(q.ReadFrameHeader),
		},
		TypedConsts: map[string]igop.TypedConst{
			"ErrCodeCancel":               {reflect.TypeOf(q.ErrCodeCancel), constant.MakeInt64(int64(q.ErrCodeCancel))},
			"ErrCodeCompression":          {reflect.TypeOf(q.ErrCodeCompression), constant.MakeInt64(int64(q.ErrCodeCompression))},
			"ErrCodeConnect":              {reflect.TypeOf(q.ErrCodeConnect), constant.MakeInt64(int64(q.ErrCodeConnect))},
			"ErrCodeEnhanceYourCalm":      {reflect.TypeOf(q.ErrCodeEnhanceYourCalm), constant.MakeInt64(int64(q.ErrCodeEnhanceYourCalm))},
			"ErrCodeFlowControl":          {reflect.TypeOf(q.ErrCodeFlowControl), constant.MakeInt64(int64(q.ErrCodeFlowControl))},
			"ErrCodeFrameSize":            {reflect.TypeOf(q.ErrCodeFrameSize), constant.MakeInt64(int64(q.ErrCodeFrameSize))},
			"ErrCodeHTTP11Required":       {reflect.TypeOf(q.ErrCodeHTTP11Required), constant.MakeInt64(int64(q.ErrCodeHTTP11Required))},
			"ErrCodeInadequateSecurity":   {reflect.TypeOf(q.ErrCodeInadequateSecurity), constant.MakeInt64(int64(q.ErrCodeInadequateSecurity))},
			"ErrCodeInternal":             {reflect.TypeOf(q.ErrCodeInternal), constant.MakeInt64(int64(q.ErrCodeInternal))},
			"ErrCodeNo":                   {reflect.TypeOf(q.ErrCodeNo), constant.MakeInt64(int64(q.ErrCodeNo))},
			"ErrCodeProtocol":             {reflect.TypeOf(q.ErrCodeProtocol), constant.MakeInt64(int64(q.ErrCodeProtocol))},
			"ErrCodeRefusedStream":        {reflect.TypeOf(q.ErrCodeRefusedStream), constant.MakeInt64(int64(q.ErrCodeRefusedStream))},
			"ErrCodeSettingsTimeout":      {reflect.TypeOf(q.ErrCodeSettingsTimeout), constant.MakeInt64(int64(q.ErrCodeSettingsTimeout))},
			"ErrCodeStreamClosed":         {reflect.TypeOf(q.ErrCodeStreamClosed), constant.MakeInt64(int64(q.ErrCodeStreamClosed))},
			"FlagContinuationEndHeaders":  {reflect.TypeOf(q.FlagContinuationEndHeaders), constant.MakeInt64(int64(q.FlagContinuationEndHeaders))},
			"FlagDataEndStream":           {reflect.TypeOf(q.FlagDataEndStream), constant.MakeInt64(int64(q.FlagDataEndStream))},
			"FlagDataPadded":              {reflect.TypeOf(q.FlagDataPadded), constant.MakeInt64(int64(q.FlagDataPadded))},
			"FlagHeadersEndHeaders":       {reflect.TypeOf(q.FlagHeadersEndHeaders), constant.MakeInt64(int64(q.FlagHeadersEndHeaders))},
			"FlagHeadersEndStream":        {reflect.TypeOf(q.FlagHeadersEndStream), constant.MakeInt64(int64(q.FlagHeadersEndStream))},
			"FlagHeadersPadded":           {reflect.TypeOf(q.FlagHeadersPadded), constant.MakeInt64(int64(q.FlagHeadersPadded))},
			"FlagHeadersPriority":         {reflect.TypeOf(q.FlagHeadersPriority), constant.MakeInt64(int64(q.FlagHeadersPriority))},
			"FlagPingAck":                 {reflect.TypeOf(q.FlagPingAck), constant.MakeInt64(int64(q.FlagPingAck))},
			"FlagPushPromiseEndHeaders":   {reflect.TypeOf(q.FlagPushPromiseEndHeaders), constant.MakeInt64(int64(q.FlagPushPromiseEndHeaders))},
			"FlagPushPromisePadded":       {reflect.TypeOf(q.FlagPushPromisePadded), constant.MakeInt64(int64(q.FlagPushPromisePadded))},
			"FlagSettingsAck":             {reflect.TypeOf(q.FlagSettingsAck), constant.MakeInt64(int64(q.FlagSettingsAck))},
			"FrameContinuation":           {reflect.TypeOf(q.FrameContinuation), constant.MakeInt64(int64(q.FrameContinuation))},
			"FrameData":                   {reflect.TypeOf(q.FrameData), constant.MakeInt64(int64(q.FrameData))},
			"FrameGoAway":                 {reflect.TypeOf(q.FrameGoAway), constant.MakeInt64(int64(q.FrameGoAway))},
			"FrameHeaders":                {reflect.TypeOf(q.FrameHeaders), constant.MakeInt64(int64(q.FrameHeaders))},
			"FramePing":                   {reflect.TypeOf(q.FramePing), constant.MakeInt64(int64(q.FramePing))},
			"FramePriority":               {reflect.TypeOf(q.FramePriority), constant.MakeInt64(int64(q.FramePriority))},
			"FramePushPromise":            {reflect.TypeOf(q.FramePushPromise), constant.MakeInt64(int64(q.FramePushPromise))},
			"FrameRSTStream":              {reflect.TypeOf(q.FrameRSTStream), constant.MakeInt64(int64(q.FrameRSTStream))},
			"FrameSettings":               {reflect.TypeOf(q.FrameSettings), constant.MakeInt64(int64(q.FrameSettings))},
			"FrameWindowUpdate":           {reflect.TypeOf(q.FrameWindowUpdate), constant.MakeInt64(int64(q.FrameWindowUpdate))},
			"SettingEnablePush":           {reflect.TypeOf(q.SettingEnablePush), constant.MakeInt64(int64(q.SettingEnablePush))},
			"SettingHeaderTableSize":      {reflect.TypeOf(q.SettingHeaderTableSize), constant.MakeInt64(int64(q.SettingHeaderTableSize))},
			"SettingInitialWindowSize":    {reflect.TypeOf(q.SettingInitialWindowSize), constant.MakeInt64(int64(q.SettingInitialWindowSize))},
			"SettingMaxConcurrentStreams": {reflect.TypeOf(q.SettingMaxConcurrentStreams), constant.MakeInt64(int64(q.SettingMaxConcurrentStreams))},
			"SettingMaxFrameSize":         {reflect.TypeOf(q.SettingMaxFrameSize), constant.MakeInt64(int64(q.SettingMaxFrameSize))},
			"SettingMaxHeaderListSize":    {reflect.TypeOf(q.SettingMaxHeaderListSize), constant.MakeInt64(int64(q.SettingMaxHeaderListSize))},
		},
		UntypedConsts: map[string]igop.UntypedConst{
			"ClientPreface": {"untyped string", constant.MakeString(string(q.ClientPreface))},
			"NextProtoTLS":  {"untyped string", constant.MakeString(string(q.NextProtoTLS))},
			"TrailerPrefix": {"untyped string", constant.MakeString(string(q.TrailerPrefix))},
		},
	})
}
